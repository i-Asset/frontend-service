openapi: 3.0.1
info:
  title: Distribution Network Service API
  description: API documentation for the Distribution Network's API.
  contact:
    url: https://github.com/i-Asset/distribution-network/issues
    email: christoph.schranz@salzburgresearcht.at
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
- url: https://iasset.salzburgresearch.at/
- url: http://iasset.salzburgresearch.at/
tags:
- name: Distribution Network
  description: Connection tester for the Distribution Network
- name: System Request
  description: API for System requests on the Distribution Network
- name: Client App Request
  description: API for Client App requests on the Distribution Network
- name: Thing Request
  description: API for Thing connection requests on the Distribution Network
- name: Datastream Request
  description: API for Datastream requests on the Distribution Network
- name: Datastream Subscription Request
  description: API for Datastream Subscription requests on the Distribution Network
- name: Stream App Request
  description: API for Stream App requests on the Distribution Network
- name: Stream App Control Request
  description: API for controlling Stream Apps on the Distribution Network
paths:
  /distributionnetwork/:
    get:
      tags:
      - Distribution Network
      summary: Returns Status
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/systems_by_person/{personId}:
    get:
      tags:
      - System Request
      summary: Return all systems that belong to a person
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systems'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      tags:
      - System Request
      summary: Create or update a system for a company that belongs to a person. Creates
        also the corresponding Kafka topics.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: A system object to create, functional part of a company
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemsAndAdmins'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: system
    post:
      tags:
      - System Request
      summary: Create a new system for a company that belongs to a person. Creates
        also the corresponding Kafka topics.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: A system object to create, functional part of a company
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemsAndAdmins'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: system
  /distributionnetwork/delete_system/{personId}/{system}:
    delete:
      tags:
      - System Request
      summary: Delete a system from a company that belongs to a person
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: string
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        204:
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: User or system not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/client_apps/{personId}/{system}:
    get:
      tags:
      - Client App Request
      summary: Return all client apps that belong to a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientApps'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        403:
          description: Method not allowed for user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      tags:
      - Client App Request
      summary: Create or update a client app for a system that belongs to a person.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: A client app object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientAppBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientApps'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: client app
    post:
      tags:
      - Client App Request
      summary: Create a new client app for a system that belongs to a person.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: A client app object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientAppBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientApps'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: client app
  /distributionnetwork/client_apps/{personId}/{system}/{client_name}:
    get:
      tags:
      - Client App Request
      summary: Return a specific client app that belongs to a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: client_name
        in: path
        description: client app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientApps'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/delete_client_app/{personId}/{system}/{client_name}:
    delete:
      tags:
      - Client App Request
      summary: Delete a client app from a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: client_name
        in: path
        description: stream app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        204:
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: User or system not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/things/{personId}/{system}:
    get:
      tags:
      - Thing Request
      summary: Return all thing connections that belong to a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Things'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        403:
          description: Method not allowed for user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      tags:
      - Thing Request
      summary: Create or update a Thing connection for a system that belongs to a
        person.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: A Thing connection to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThingBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Things'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: thing name
    post:
      tags:
      - Thing Request
      summary: Create a new Thing connection for a system that belongs to a person.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: An Thing connection to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThingBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Things'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: thing name
  /distributionnetwork/things/{personId}/{system}/{thing_name}:
    get:
      tags:
      - Thing Request
      summary: Return a specific Thing connection that belongs to a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: thing_name
        in: path
        description: Thing name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Things'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/delete_thing/{personId}/{system}/{thing_name}:
    delete:
      tags:
      - Thing Request
      summary: Delete a Thing connection from a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: thing_name
        in: path
        description: thing name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        204:
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: User or system not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/datastreams/{personId}/{system}:
    get:
      tags:
      - Datastream Request
      summary: Return all datastreams that belong to a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastreams'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        403:
          description: Method not allowed for user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      tags:
      - Datastream Request
      summary: Create or update datastreams for a system that belongs to a person.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: An array of datastream objects to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatastreamsBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastreams'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: datastreams
    post:
      tags:
      - Datastream Request
      summary: Create new datastreams for a system that belongs to a person.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: An array of datastream objects to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatastreamsBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastreams'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: datastreams
  /distributionnetwork/datastreams_per_client/{personId}/{system}/{client_name}:
    get:
      tags:
      - Datastream Request
      summary: Return all datastreams that belong to a client application of a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: client_name
        in: path
        description: client app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastreams'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        403:
          description: Method not allowed for user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/datastreams_per_thing/{personId}/{system}/{thing_name}:
    get:
      tags:
      - Datastream Request
      summary: Return all datastreams that belong to a thing of a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: thing_name
        in: path
        description: thing name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastreams'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        403:
          description: Method not allowed for user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/delete_datastreams/{personId}/{system}/{thing_name}:
    delete:
      tags:
      - Datastream Request
      summary: Delete datastreams from from a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: thing_name
        in: path
        description: name of the thing the datastream belongs to
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: An array of datastream shortnames to delete.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DatastreamShortnamesBody'
        required: true
      responses:
        204:
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: User or system not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: datastreams
  /distributionnetwork/subscriptions/{personId}/{system}:
    get:
      tags:
      - Datastream Subscription Request
      summary: Return all datastream subscriptions that belong to a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriptions'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        403:
          description: Method not allowed for user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/subscriptions_per_client/{personId}/{system}/{client_name}:
    get:
      tags:
      - Datastream Subscription Request
      summary: Return all datastream subscriptions that belong to a client application
        of a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: client_name
        in: path
        description: client app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriptions'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        403:
          description: Method not allowed for user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      tags:
      - Datastream Subscription Request
      summary: Create or update datastream subscriptions for a client application
        that belongs to a person.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: client_name
        in: path
        description: client app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: An array of datastream subscription objects to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionsBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriptions'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: subscriptions
    post:
      tags:
      - Datastream Subscription Request
      summary: Create new datastream subscription for a client application that belongs
        to a person.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: client_name
        in: path
        description: client app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: An array of datastream subscription objects to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionsBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscriptions'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: subscriptions
  /distributionnetwork/delete_subscriptions/{personId}/{system}/{client_name}:
    delete:
      tags:
      - Datastream Subscription Request
      summary: Delete datastream subscription from from a client application
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: client_name
        in: path
        description: name of the client application the datastream belongs to
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: An array of datastream subscriptions to delete.
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/SubscriptionShortnamesBody'
        required: true
      responses:
        204:
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: User or system not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: subscriptions
  /distributionnetwork/stream_apps/{personId}/{system}:
    get:
      tags:
      - Stream App Request
      summary: Return all stream apps that belong to a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamApps'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        403:
          description: Method not allowed for user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      tags:
      - Stream App Request
      summary: Create or update a stream app for a system that belongs to a person.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: A stream app object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamAppBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamApps'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: stream app
    post:
      tags:
      - Stream App Request
      summary: Create a new stream app for a system that belongs to a person.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: A stream app object to create.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamAppBody'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamApps'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: stream app
  /distributionnetwork/stream_apps/{personId}/{system}/{stream_name}:
    get:
      tags:
      - Stream App Request
      summary: Return a specific stream app that belongs to a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: stream_name
        in: path
        description: stream app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamApps'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid personId provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/delete_stream_app/{personId}/{system}/{stream_name}:
    delete:
      tags:
      - Stream App Request
      summary: Delete a stream app from a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: stream_name
        in: path
        description: stream app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      responses:
        204:
          description: Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: User or system not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/stream_app_statistic/{personId}/{system}/{stream_name}:
    get:
      tags:
      - Stream App Control Request
      summary: Return the statistic of a specific stream app that belongs to a system
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: stream_name
        in: path
        description: stream app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      - name: statistic
        in: query
        description: Return 'status' (default), 'is_running', 'stats', 'short_stats',
          'logs_{number_of_logs}' or 'config'.
        schema:
          format: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamAppStatistic'
        400:
          description: Authentication error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: No or invalid fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /distributionnetwork/stream_app_deploy/{personId}/{system}/{stream_name}:
    put:
      tags:
      - Stream App Control Request
      summary: Deploy an existing stream app of a system, stop and redeploy if it
        already runs.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: stream_name
        in: path
        description: stream app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: An empty object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: stream app
    post:
      tags:
      - Stream App Control Request
      summary: Deploy an existing stream app of a system.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: stream_name
        in: path
        description: stream app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: An empty object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: stream app
  /distributionnetwork/stream_app_stop/{personId}/{system}/{stream_name}:
    post:
      tags:
      - Stream App Control Request
      summary: Stop an existing stream app of a system.
      parameters:
      - name: personId
        in: path
        description: User ID from the identity service
        required: true
        schema:
          type: integer
      - name: system
        in: path
        description: identifier with '_' as level separator
        required: true
        schema:
          type: string
          format: string
      - name: stream_name
        in: path
        description: stream app name
        required: true
        schema:
          type: string
          format: string
      - name: Authorization
        in: header
        description: Bearer token
        required: true
        schema:
          type: string
          format: string
      requestBody:
        description: An empty object.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Empty'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        400:
          description: Authentication error, user not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        401:
          description: Authentication error, password is incorrect.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        406:
          description: Invalid data provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      x-codegen-request-body-name: stream app
components:
  schemas:
    Status:
      type: object
      properties:
        status_code:
          type: integer
          format: int32
        url:
          type: string
          format: string
        value:
          type: string
          format: string
    Systems:
      type: object
      properties:
        systems:
          type: array
          items:
            $ref: '#/components/schemas/System'
    System:
      type: object
      properties:
        system_name:
          type: string
        company:
          type: string
        company_id:
          type: integer
          format: int32
        created_at:
          type: string
        kafka_servers:
          type: string
        description:
          type: string
        creator:
          $ref: '#/components/schemas/User'
        mqtt_broker:
          $ref: '#/components/schemas/MqttBroker'
    SystemBody:
      type: object
      properties:
        workcenter:
          type: string
        station:
          type: string
        company_id:
          type: integer
          format: int32
        kafka_servers:
          type: string
        description:
          type: string
        mqtt_broker:
          $ref: '#/components/schemas/MqttBroker'
    User:
      type: object
      properties:
        first_name:
          type: string
        sur_name:
          type: string
        creator_id:
          type: integer
          format: int32
        email:
          type: string
    MqttBroker:
      type: object
      properties:
        mqtt_server:
          type: string
        mqtt_topic:
          type: string
        mqtt_version:
          type: string
    SystemsAndAdmins:
      type: object
      properties:
        systems:
          type: array
          items:
            $ref: '#/components/schemas/System'
        is_admin_of_sys:
          type: array
          items:
            $ref: '#/components/schemas/AdminOfSys'
    AdminOfSys:
      type: object
      properties:
        creator_id:
          type: integer
        datetime:
          type: string
        user_id:
          type: integer
          format: int32
        system_name:
          type: string
    StreamApps:
      type: object
      properties:
        stream_apps:
          type: array
          items:
            $ref: '#/components/schemas/StreamApp'
    StreamApp:
      type: object
      properties:
        name:
          type: string
        target_system:
          type: string
        logic:
          type: string
        is_multi_source:
          type: boolean
        description:
          type: string
    StreamAppBody:
      type: object
      properties:
        name:
          type: string
        target_system:
          type: string
        logic:
          type: string
        is_multi_source:
          type: boolean
        description:
          type: string
    StreamAppStatistic:
      type: object
      properties:
        stream_name:
          type: string
          format: string
        statistic:
          type: string
          format: string
        value:
          type: object
          properties: {}
    Empty:
      type: object
    ClientApps:
      type: object
      properties:
        client_apps:
          type: array
          items:
            $ref: '#/components/schemas/ClientApp'
    ClientApp:
      type: object
      properties:
        name:
          type: string
        system_name:
          type: string
        resource_uri:
          type: string
        on_kafka:
          type: boolean
        key:
          type: string
        description:
          type: string
    ClientAppBody:
      type: object
      properties:
        name:
          type: string
        resource_uri:
          type: string
        on_kafka:
          type: boolean
        description:
          type: string
    Things:
      type: object
      properties:
        Thing:
          type: array
          items:
            $ref: '#/components/schemas/Thing'
    Thing:
      type: object
      properties:
        name:
          type: string
        system_name:
          type: string
        resource_uri:
          type: string
        description:
          type: string
    ThingBody:
      type: object
      properties:
        name:
          type: string
        resource_uri:
          type: string
        description:
          type: string
    Datastreams:
      type: object
      properties:
        datastreams:
          type: array
          items:
            $ref: '#/components/schemas/Datastream'
    Datastream:
      type: object
      properties:
        shortname:
          type: string
        name:
          type: string
        system_name:
          type: string
        client_name:
          type: string
        thing_name:
          type: string
        resource_uri:
          type: string
        contact_mail:
          type: string
        description:
          type: string
    DatastreamsBody:
      type: array
      items:
        $ref: '#/components/schemas/DatastreamBody'
    DatastreamBody:
      type: object
      properties:
        shortname:
          type: string
        name:
          type: string
        client_name:
          type: string
        thing_name:
          type: string
        resource_uri:
          type: string
        description:
          type: string
    DatastreamShortnamesBody:
      type: array
      items:
        type: string
    Subscriptions:
      type: object
      properties:
        datastreams:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    Subscription:
      type: object
      properties:
        shortname:
          type: string
        name:
          type: string
        system_name:
          type: string
        client_name:
          type: string
        thing_name:
          type: string
        resource_uri:
          type: string
        contact_mail:
          type: string
        description:
          type: string
    SubscriptionsBody:
      type: array
      items:
        $ref: '#/components/schemas/SubscriptionBody'
    SubscriptionBody:
      type: object
      properties:
        shortname:
          type: string
        thing_name:
          type: string
        system_name:
          type: string
    SubscriptionShortnamesBody:
      type: array
      items:
        $ref: '#/components/schemas/SubscriptionShortnameBody'
    SubscriptionShortnameBody:
      type: object
      properties:
        shortname:
          type: string
        thing_name:
          type: string
        system_name:
          type: string
