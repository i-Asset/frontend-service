/**
 * the Info
 * infodescription
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Reference } from './reference';

export interface Extension { 
    name?: string;
    value?: string;
    valueType?: Extension.ValueTypeEnum;
    refersTo?: Reference;
    supplementalSemanticIds?: Array<Reference>;
    semanticId?: Reference;
}
export namespace Extension {
    export type ValueTypeEnum = 'xs:anyURI' | 'xs:base64Binary' | 'xs:boolean' | 'xs:byte' | 'xs:date' | 'xs:dateTime' | 'xs:dateTimeStamp' | 'xs:dayTimeDuration' | 'xs:decimal' | 'xs:double' | 'xs:duration' | 'xs:float' | 'xs:gDay' | 'xs:gMonth' | 'xs:gMonthDay' | 'xs:gYear' | 'xs:gYearMonth' | 'xs:hexBinary' | 'xs:int' | 'xs:integer' | 'xs:long' | 'xs:negativeInteger' | 'xs:nonNegativeInteger' | 'xs:nonPositiveInteger' | 'xs:positiveInteger' | 'xs:short' | 'xs:string' | 'xs:time' | 'xs:unsignedByte' | 'xs:unsignedInt' | 'xs:unsignedLong' | 'xs:unsignedShort' | 'xs:yearMonthDuration';
    export const ValueTypeEnum = {
        AnyURI: 'xs:anyURI' as ValueTypeEnum,
        Base64Binary: 'xs:base64Binary' as ValueTypeEnum,
        Boolean: 'xs:boolean' as ValueTypeEnum,
        Byte: 'xs:byte' as ValueTypeEnum,
        Date: 'xs:date' as ValueTypeEnum,
        DateTime: 'xs:dateTime' as ValueTypeEnum,
        DateTimeStamp: 'xs:dateTimeStamp' as ValueTypeEnum,
        DayTimeDuration: 'xs:dayTimeDuration' as ValueTypeEnum,
        Decimal: 'xs:decimal' as ValueTypeEnum,
        Double: 'xs:double' as ValueTypeEnum,
        Duration: 'xs:duration' as ValueTypeEnum,
        Float: 'xs:float' as ValueTypeEnum,
        GDay: 'xs:gDay' as ValueTypeEnum,
        GMonth: 'xs:gMonth' as ValueTypeEnum,
        GMonthDay: 'xs:gMonthDay' as ValueTypeEnum,
        GYear: 'xs:gYear' as ValueTypeEnum,
        GYearMonth: 'xs:gYearMonth' as ValueTypeEnum,
        HexBinary: 'xs:hexBinary' as ValueTypeEnum,
        Int: 'xs:int' as ValueTypeEnum,
        Integer: 'xs:integer' as ValueTypeEnum,
        Long: 'xs:long' as ValueTypeEnum,
        NegativeInteger: 'xs:negativeInteger' as ValueTypeEnum,
        NonNegativeInteger: 'xs:nonNegativeInteger' as ValueTypeEnum,
        NonPositiveInteger: 'xs:nonPositiveInteger' as ValueTypeEnum,
        PositiveInteger: 'xs:positiveInteger' as ValueTypeEnum,
        Short: 'xs:short' as ValueTypeEnum,
        String: 'xs:string' as ValueTypeEnum,
        Time: 'xs:time' as ValueTypeEnum,
        UnsignedByte: 'xs:unsignedByte' as ValueTypeEnum,
        UnsignedInt: 'xs:unsignedInt' as ValueTypeEnum,
        UnsignedLong: 'xs:unsignedLong' as ValueTypeEnum,
        UnsignedShort: 'xs:unsignedShort' as ValueTypeEnum,
        YearMonthDuration: 'xs:yearMonthDuration' as ValueTypeEnum
    };
}